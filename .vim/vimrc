execute pathogen#infect()

syntax on
filetype plugin indent on

let g:solarized_termcolors=256
set t_Co=256
set background=dark
colorscheme solarized

set tabstop=2
set softtabstop=0
set expandtab
set shiftwidth=2
set smarttab
set autoindent

set encoding=utf-8

set number
set relativenumber
set cursorline

set laststatus=2
set hidden
set incsearch

nnoremap <Space> <Nop>
let mapleader = "\<Space>"

highlight LineNr ctermfg=DarkGrey
highlight CursorLineNr ctermfg=DarkGrey
highlight LineNr guifg=#666666
highlight CursorLineNr guifg=#666666
highlight Cursor guibg=#dc322f

set ignorecase
set smartcase
set backupcopy=yes
set showmode

set wildignore+=*/node_modules/*
set wildignore+=*/$tf/*

nmap <silent> <leader>nt :NERDTreeToggle<CR>
nmap <silent> <leader>ut :UndotreeToggle<CR>:UndotreeFocus<CR>

nmap <silent> <C-Tab> :bnext!<CR>
nmap <silent> <C-S-Tab> :bprevious!<CR>
nmap <silent> <leader>k :bnext!<CR>
nmap <silent> <leader>j :bprevious!<CR>

" Change vim cwd when changing NERDTree root
let g:NERDTreeChDirMode=2
" Don't show the 'Bookmarks' or 'Press ? for help' text
let NERDTreeMinimalUI = 1

" VORAX. Jump to the header row of the output window
" can then jump to the next/previous column with ; and ,
nmap <silent> <leader>H gg/^-<CR>f<Space>

nmap <silent> <C-Enter> :VORAXExecCurrent<CR>
imap <silent> <C-Enter> <Esc>:VORAXExecCurrent<CR>

let g:vorax_key_doc_search='<leader>vds'

let g:vorax_output_window_size=10

let g:vorax_key_describe='<F4>'
let g:vorax_key_describe_verbose='<S-F4>'

" Set VORAX output window to show full headings
let g:vorax_output_full_heading=1

let g:vorax_plsql_associations=
\ {'FUNCTION' : 'fnc',
\  'PROCEDURE' : 'prc',
\  'TRIGGER' : 'trg',
\  'PACKAGE_SPEC' : 'pks',
\  'PACKAGE_BODY' : 'pkb',
\  'PACKAGE' : 'pkg',
\  'TYPE_SPEC' : 'tps',
\  'TYPE_BODY' : 'tpb',
\  'TYPE' : 'typ',
\  'JAVA_SOURCE' : 'jsp'}

" Always start ctrlp from the cwd
let g:ctrlp_working_path_mode='w'
" Keep the cache across sessions
let g:ctrlp_clear_cache_on_exit=0

" Make backspace work like expected. See :h 'backspace'
set backspace=indent,eol,start

" remove some gvim clutter
set guioptions-=m "menubar
set guioptions-=r "scrollbar
set guioptions-=T "toolbar
set guioptions-=L "Left-hand scrollbar

if has('win32')
  " start gvim maximized. Simulates pressing Alt+Space x
  autocmd GUIEnter * simalt ~x
  set guifont=Hack:h12
else
  set guifont=Hack\ 15
endif

let g:SuperTabDefaultCompletionType="<c-n>"
let g:SuperTabCrMapping=1

let g:airline_theme='tomorrow'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" Reset NERDTree and VORAX windows to their defined sizes.
function! g:ResizeAllPluginWindows()

  function! s:ResizePluginWindows()
    if &ft == 'nerdtree'
      :execute 'vertical resize ' . g:NERDTreeWinSize
    elseif &ft == 'connvorax'
      :execute 'vertical resize ' . g:vorax_cmanager_size
    elseif &ft == 'outputvorax'
      :execute 'resize ' . g:vorax_output_window_size
    endif
  endfunction

  let currentWindow = winnr()
  :windo call s:ResizePluginWindows()
  :execute currentWindow . 'wincmd w'

endfunction

nmap <silent> <leader>r :call g:ResizeAllPluginWindows()<CR>

function! g:CloseBufferAfterSwitch()
  if &mod
    echo "Buffer has unsaved changes!"
  else
    let currentBuffer = bufnr('%')
    :bprevious
    :execute 'bd' . currentBuffer
  endif
endfunction

nmap <silent> <leader>wq :call g:CloseBufferAfterSwitch()<CR>

function! g:LoadWorkspace()
  if winnr('$') > 1
    :execute ':only'
  endif
  :execute ':VORAXConnectionsToggle'
  :execute ':NERDTreeToggle'
  :execute ':VORAXOutputToggle'
  :execute "wincmd k"
  :execute "wincmd l"
  :call g:ResizeAllPluginWindows()
endfunction

nmap <silent> <leader>ws :call g:LoadWorkspace()<CR>
