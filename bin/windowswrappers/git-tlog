#!/bin/sh
#
# Wrapper to determine and pass arguments to git-log, so that it looks at the git-tfs
# subtree remote. Otherwise we only see subtree merge commits in the history of a given
# file. File paths also need to be updated relative to the root of the repository, rather
# than their location in the subtree.
#
# It is assumed that the root of the repo (the folder containing .git) holds only
# directories, one per project, and below those one directory per branch.

LOG_PATH="$1"

TOP_LEVEL=`git rev-parse --show-toplevel`
GIT_PATH_SIZE=`echo "$TOP_LEVEL" | wc -c`

SUBTREE_REMOTE_SUFFIX=`pwd | cut -c$GIT_PATH_SIZE- | awk 'BEGIN {OFS="/"; FS=OFS} {print $2, $3}'`

if [ "$SUBTREE_REMOTE_SUFFIX" == "/" ]; then
  echo "Can't determine subtree suffix. This command must be run from a subtree."
  exit 1
fi

if [ ! -z "$LOG_PATH" ]; then
  STRIP_CHARS_FROM_ABSOLUTE=`echo "$TOP_LEVEL/$FILE_RELATIVE_PATH/$SUBTREE_REMOTE_SUFFIX" | wc -c`
  FILE_RELATIVE_PATH=`realpath $LOG_PATH | cut -c$STRIP_CHARS_FROM_ABSOLUTE-`
  LOG_PATH=$TOP_LEVEL/$FILE_RELATIVE_PATH
fi

COMMAND="git log tfs/default_subtree/$SUBTREE_REMOTE_SUFFIX -- $LOG_PATH"

echo $COMMAND
exec $COMMAND
